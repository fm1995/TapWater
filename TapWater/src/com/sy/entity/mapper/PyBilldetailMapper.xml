<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mappdao.PyBilldetailMapper" >
  <resultMap id="BaseResultMap" type="com.sy.entity.PyBilldetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_no" property="billNo" jdbcType="VARCHAR" />
    <result column="user_no" property="userNo" jdbcType="VARCHAR" />
    <result column="cost_type_code" property="costTypeCode" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="detail_money" property="detailMoney" jdbcType="DECIMAL" />
    <result column="real_money" property="realMoney" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="BIT" />
    <result column="balance_date" property="balanceDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bill_no, user_no, cost_type_code, amount, price, detail_money, real_money, balance, 
    balance_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sy.entity.PyBilldetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from py_billdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from py_billdetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from py_billdetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sy.entity.PyBilldetailExample" >
    delete from py_billdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sy.entity.PyBilldetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into py_billdetail (bill_no, user_no, cost_type_code, 
      amount, price, detail_money, 
      real_money, balance, balance_date
      )
    values (#{billNo,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, #{costTypeCode,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{detailMoney,jdbcType=DECIMAL}, 
      #{realMoney,jdbcType=DECIMAL}, #{balance,jdbcType=BIT}, #{balanceDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sy.entity.PyBilldetail" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into py_billdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="billNo != null" >
        bill_no,
      </if>
      <if test="userNo != null" >
        user_no,
      </if>
      <if test="costTypeCode != null" >
        cost_type_code,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="detailMoney != null" >
        detail_money,
      </if>
      <if test="realMoney != null" >
        real_money,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="balanceDate != null" >
        balance_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="billNo != null" >
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null" >
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="costTypeCode != null" >
        #{costTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="detailMoney != null" >
        #{detailMoney,jdbcType=DECIMAL},
      </if>
      <if test="realMoney != null" >
        #{realMoney,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=BIT},
      </if>
      <if test="balanceDate != null" >
        #{balanceDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sy.entity.PyBilldetailExample" resultType="java.lang.Integer" >
    select count(*) from py_billdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update py_billdetail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.billNo != null" >
        bill_no = #{record.billNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userNo != null" >
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.costTypeCode != null" >
        cost_type_code = #{record.costTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.detailMoney != null" >
        detail_money = #{record.detailMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.realMoney != null" >
        real_money = #{record.realMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=BIT},
      </if>
      <if test="record.balanceDate != null" >
        balance_date = #{record.balanceDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update py_billdetail
    set id = #{record.id,jdbcType=INTEGER},
      bill_no = #{record.billNo,jdbcType=VARCHAR},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      cost_type_code = #{record.costTypeCode,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      detail_money = #{record.detailMoney,jdbcType=DECIMAL},
      real_money = #{record.realMoney,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=BIT},
      balance_date = #{record.balanceDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.entity.PyBilldetail" >
    update py_billdetail
    <set >
      <if test="billNo != null" >
        bill_no = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null" >
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="costTypeCode != null" >
        cost_type_code = #{costTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="detailMoney != null" >
        detail_money = #{detailMoney,jdbcType=DECIMAL},
      </if>
      <if test="realMoney != null" >
        real_money = #{realMoney,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=BIT},
      </if>
      <if test="balanceDate != null" >
        balance_date = #{balanceDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.entity.PyBilldetail" >
    update py_billdetail
    set bill_no = #{billNo,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      cost_type_code = #{costTypeCode,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      detail_money = #{detailMoney,jdbcType=DECIMAL},
      real_money = #{realMoney,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=BIT},
      balance_date = #{balanceDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>