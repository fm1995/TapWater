<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mappdao.IvInvoiceMapper" >
  <resultMap id="BaseResultMap" type="com.sy.entity.IvInvoice" >
    <id column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" />
    <result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
    <result column="in_id" property="inId" jdbcType="INTEGER" />
    <result column="out_id" property="outId" jdbcType="INTEGER" />
    <result column="archive_id" property="archiveId" jdbcType="INTEGER" />
    <result column="used" property="used" jdbcType="BIT" />
    <result column="use_date" property="useDate" jdbcType="TIMESTAMP" />
    <result column="invalid" property="invalid" jdbcType="BIT" />
    <result column="invalid_date" property="invalidDate" jdbcType="TIMESTAMP" />
    <result column="archived" property="archived" jdbcType="BIT" />
    <result column="archive_date" property="archiveDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    invoice_no, invoice_type, emp_id, in_id, out_id, archive_id, used, use_date, invalid, 
    invalid_date, archived, archive_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sy.entity.IvInvoiceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iv_invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from iv_invoice
    where invoice_no = #{invoiceNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from iv_invoice
    where invoice_no = #{invoiceNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sy.entity.IvInvoiceExample" >
    delete from iv_invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sy.entity.IvInvoice" >
    insert into iv_invoice (invoice_no, invoice_type, emp_id, 
      in_id, out_id, archive_id, 
      used, use_date, invalid, invalid_date, 
      archived, archive_date)
    values (#{invoiceNo,jdbcType=VARCHAR}, #{invoiceType,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, 
      #{inId,jdbcType=INTEGER}, #{outId,jdbcType=INTEGER}, #{archiveId,jdbcType=INTEGER}, 
      #{used,jdbcType=BIT}, #{useDate,jdbcType=TIMESTAMP}, #{invalid,jdbcType=BIT}, #{invalidDate,jdbcType=TIMESTAMP}, 
      #{archived,jdbcType=BIT}, #{archiveDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sy.entity.IvInvoice" >
    insert into iv_invoice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="invoiceNo != null" >
        invoice_no,
      </if>
      <if test="invoiceType != null" >
        invoice_type,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="inId != null" >
        in_id,
      </if>
      <if test="outId != null" >
        out_id,
      </if>
      <if test="archiveId != null" >
        archive_id,
      </if>
      <if test="used != null" >
        used,
      </if>
      <if test="useDate != null" >
        use_date,
      </if>
      <if test="invalid != null" >
        invalid,
      </if>
      <if test="invalidDate != null" >
        invalid_date,
      </if>
      <if test="archived != null" >
        archived,
      </if>
      <if test="archiveDate != null" >
        archive_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invoiceNo != null" >
        #{invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="inId != null" >
        #{inId,jdbcType=INTEGER},
      </if>
      <if test="outId != null" >
        #{outId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="used != null" >
        #{used,jdbcType=BIT},
      </if>
      <if test="useDate != null" >
        #{useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null" >
        #{invalid,jdbcType=BIT},
      </if>
      <if test="invalidDate != null" >
        #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="archived != null" >
        #{archived,jdbcType=BIT},
      </if>
      <if test="archiveDate != null" >
        #{archiveDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sy.entity.IvInvoiceExample" resultType="java.lang.Integer" >
    select count(*) from iv_invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update iv_invoice
    <set >
      <if test="record.invoiceNo != null" >
        invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceType != null" >
        invoice_type = #{record.invoiceType,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.inId != null" >
        in_id = #{record.inId,jdbcType=INTEGER},
      </if>
      <if test="record.outId != null" >
        out_id = #{record.outId,jdbcType=INTEGER},
      </if>
      <if test="record.archiveId != null" >
        archive_id = #{record.archiveId,jdbcType=INTEGER},
      </if>
      <if test="record.used != null" >
        used = #{record.used,jdbcType=BIT},
      </if>
      <if test="record.useDate != null" >
        use_date = #{record.useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalid != null" >
        invalid = #{record.invalid,jdbcType=BIT},
      </if>
      <if test="record.invalidDate != null" >
        invalid_date = #{record.invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.archived != null" >
        archived = #{record.archived,jdbcType=BIT},
      </if>
      <if test="record.archiveDate != null" >
        archive_date = #{record.archiveDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update iv_invoice
    set invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      invoice_type = #{record.invoiceType,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      in_id = #{record.inId,jdbcType=INTEGER},
      out_id = #{record.outId,jdbcType=INTEGER},
      archive_id = #{record.archiveId,jdbcType=INTEGER},
      used = #{record.used,jdbcType=BIT},
      use_date = #{record.useDate,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      invalid_date = #{record.invalidDate,jdbcType=TIMESTAMP},
      archived = #{record.archived,jdbcType=BIT},
      archive_date = #{record.archiveDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.entity.IvInvoice" >
    update iv_invoice
    <set >
      <if test="invoiceType != null" >
        invoice_type = #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="inId != null" >
        in_id = #{inId,jdbcType=INTEGER},
      </if>
      <if test="outId != null" >
        out_id = #{outId,jdbcType=INTEGER},
      </if>
      <if test="archiveId != null" >
        archive_id = #{archiveId,jdbcType=INTEGER},
      </if>
      <if test="used != null" >
        used = #{used,jdbcType=BIT},
      </if>
      <if test="useDate != null" >
        use_date = #{useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null" >
        invalid = #{invalid,jdbcType=BIT},
      </if>
      <if test="invalidDate != null" >
        invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="archived != null" >
        archived = #{archived,jdbcType=BIT},
      </if>
      <if test="archiveDate != null" >
        archive_date = #{archiveDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where invoice_no = #{invoiceNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.entity.IvInvoice" >
    update iv_invoice
    set invoice_type = #{invoiceType,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      in_id = #{inId,jdbcType=INTEGER},
      out_id = #{outId,jdbcType=INTEGER},
      archive_id = #{archiveId,jdbcType=INTEGER},
      used = #{used,jdbcType=BIT},
      use_date = #{useDate,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT},
      invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      archived = #{archived,jdbcType=BIT},
      archive_date = #{archiveDate,jdbcType=TIMESTAMP}
    where invoice_no = #{invoiceNo,jdbcType=VARCHAR}
  </update>
</mapper>