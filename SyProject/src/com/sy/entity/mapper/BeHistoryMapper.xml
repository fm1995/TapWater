<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mappdao.BeHistoryMapper">
	<resultMap id="BaseResultMap" type="com.sy.entity.BeHistory">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="step_id" property="stepId" jdbcType="INTEGER" />
		<result column="datee" property="datee" jdbcType="TIMESTAMP" />
		<result column="emp_id" property="empId" jdbcType="INTEGER" />
		<result column="is_back" property="isBack" jdbcType="BIT" />
		<association property="emp" column="emp_id"
			resultMap="com.sy.mappdao.SyEmpMapper.BaseResultMap"></association>
		<association property="order" column="order_no"
			resultMap="com.sy.mappdao.BeOrderMapper.BaseResultMap"></association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, order_no, step_id, datee, emp_id, is_back
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sy.entity.BeHistoryExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from be_history
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from be_history
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from be_history
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sy.entity.BeHistoryExample">
		delete from be_history
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sy.entity.BeHistory">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into be_history (order_no, step_id, datee,
		emp_id, is_back)
		values (#{orderNo,jdbcType=VARCHAR}, #{stepId,jdbcType=INTEGER},
		#{datee,jdbcType=TIMESTAMP},
		#{empId,jdbcType=INTEGER}, #{isBack,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.sy.entity.BeHistory">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into be_history
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="stepId != null">
				step_id,
			</if>
			<if test="datee != null">
				datee,
			</if>
			<if test="empId != null">
				emp_id,
			</if>
			<if test="isBack != null">
				is_back,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="stepId != null">
				#{stepId,jdbcType=INTEGER},
			</if>
			<if test="datee != null">
				#{datee,jdbcType=TIMESTAMP},
			</if>
			<if test="empId != null">
				#{empId,jdbcType=INTEGER},
			</if>
			<if test="isBack != null">
				#{isBack,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sy.entity.BeHistoryExample"
		resultType="java.lang.Integer">
		select count(*) from be_history
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update be_history
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.orderNo != null">
				order_no = #{record.orderNo,jdbcType=VARCHAR},
			</if>
			<if test="record.stepId != null">
				step_id = #{record.stepId,jdbcType=INTEGER},
			</if>
			<if test="record.datee != null">
				datee = #{record.datee,jdbcType=TIMESTAMP},
			</if>
			<if test="record.empId != null">
				emp_id = #{record.empId,jdbcType=INTEGER},
			</if>
			<if test="record.isBack != null">
				is_back = #{record.isBack,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update be_history
		set id = #{record.id,jdbcType=INTEGER},
		order_no = #{record.orderNo,jdbcType=VARCHAR},
		step_id = #{record.stepId,jdbcType=INTEGER},
		datee = #{record.datee,jdbcType=TIMESTAMP},
		emp_id = #{record.empId,jdbcType=INTEGER},
		is_back = #{record.isBack,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sy.entity.BeHistory">
		update be_history
		<set>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="stepId != null">
				step_id = #{stepId,jdbcType=INTEGER},
			</if>
			<if test="datee != null">
				datee = #{datee,jdbcType=TIMESTAMP},
			</if>
			<if test="empId != null">
				emp_id = #{empId,jdbcType=INTEGER},
			</if>
			<if test="isBack != null">
				is_back = #{isBack,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sy.entity.BeHistory">
		update be_history
		set order_no = #{orderNo,jdbcType=VARCHAR},
		step_id = #{stepId,jdbcType=INTEGER},
		datee = #{datee,jdbcType=TIMESTAMP},
		emp_id = #{empId,jdbcType=INTEGER},
		is_back = #{isBack,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 通过工单号查询历史流程 -->
	<select id="queryByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from sy.be_history h left join sy.sy_emp e 
		    on  h.emp_id = e.emp_id 
		    left join sy.be_order b 
		    on h.order_no = b.order_no
		<if test="be!=null">
			and h.order_no = #{be}
		</if>
	</select>

</mapper>