<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sy.mappdao.PyBalanceMapper" >
  <resultMap id="BaseResultMap" type="com.sy.entity.PyBalance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userno" property="userno" jdbcType="VARCHAR" />
    <result column="balancedate" property="balancedate" jdbcType="DATE" />
    <result column="balancemoney" property="balancemoney" jdbcType="DECIMAL" />
    <result column="billno" property="billno" jdbcType="VARCHAR" />
    <result column="billrealmoney1" property="billrealmoney1" jdbcType="DECIMAL" />
    <result column="billrealmoney2" property="billrealmoney2" jdbcType="DECIMAL" />
    <result column="payno" property="payno" jdbcType="VARCHAR" />
    <result column="payusemoney1" property="payusemoney1" jdbcType="DECIMAL" />
    <result column="payusemoney2" property="payusemoney2" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userno, balancedate, balancemoney, billno, billrealmoney1, billrealmoney2, payno, 
    payusemoney1, payusemoney2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sy.entity.PyBalanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from py_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from py_balance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from py_balance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sy.entity.PyBalanceExample" >
    delete from py_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sy.entity.PyBalance" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into py_balance (userno, balancedate, balancemoney, 
      billno, billrealmoney1, billrealmoney2, 
      payno, payusemoney1, payusemoney2
      )
    values (#{userno,jdbcType=VARCHAR}, #{balancedate,jdbcType=DATE}, #{balancemoney,jdbcType=DECIMAL}, 
      #{billno,jdbcType=VARCHAR}, #{billrealmoney1,jdbcType=DECIMAL}, #{billrealmoney2,jdbcType=DECIMAL}, 
      #{payno,jdbcType=VARCHAR}, #{payusemoney1,jdbcType=DECIMAL}, #{payusemoney2,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sy.entity.PyBalance" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into py_balance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userno != null" >
        userno,
      </if>
      <if test="balancedate != null" >
        balancedate,
      </if>
      <if test="balancemoney != null" >
        balancemoney,
      </if>
      <if test="billno != null" >
        billno,
      </if>
      <if test="billrealmoney1 != null" >
        billrealmoney1,
      </if>
      <if test="billrealmoney2 != null" >
        billrealmoney2,
      </if>
      <if test="payno != null" >
        payno,
      </if>
      <if test="payusemoney1 != null" >
        payusemoney1,
      </if>
      <if test="payusemoney2 != null" >
        payusemoney2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userno != null" >
        #{userno,jdbcType=VARCHAR},
      </if>
      <if test="balancedate != null" >
        #{balancedate,jdbcType=DATE},
      </if>
      <if test="balancemoney != null" >
        #{balancemoney,jdbcType=DECIMAL},
      </if>
      <if test="billno != null" >
        #{billno,jdbcType=VARCHAR},
      </if>
      <if test="billrealmoney1 != null" >
        #{billrealmoney1,jdbcType=DECIMAL},
      </if>
      <if test="billrealmoney2 != null" >
        #{billrealmoney2,jdbcType=DECIMAL},
      </if>
      <if test="payno != null" >
        #{payno,jdbcType=VARCHAR},
      </if>
      <if test="payusemoney1 != null" >
        #{payusemoney1,jdbcType=DECIMAL},
      </if>
      <if test="payusemoney2 != null" >
        #{payusemoney2,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sy.entity.PyBalanceExample" resultType="java.lang.Integer" >
    select count(*) from py_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update py_balance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userno != null" >
        userno = #{record.userno,jdbcType=VARCHAR},
      </if>
      <if test="record.balancedate != null" >
        balancedate = #{record.balancedate,jdbcType=DATE},
      </if>
      <if test="record.balancemoney != null" >
        balancemoney = #{record.balancemoney,jdbcType=DECIMAL},
      </if>
      <if test="record.billno != null" >
        billno = #{record.billno,jdbcType=VARCHAR},
      </if>
      <if test="record.billrealmoney1 != null" >
        billrealmoney1 = #{record.billrealmoney1,jdbcType=DECIMAL},
      </if>
      <if test="record.billrealmoney2 != null" >
        billrealmoney2 = #{record.billrealmoney2,jdbcType=DECIMAL},
      </if>
      <if test="record.payno != null" >
        payno = #{record.payno,jdbcType=VARCHAR},
      </if>
      <if test="record.payusemoney1 != null" >
        payusemoney1 = #{record.payusemoney1,jdbcType=DECIMAL},
      </if>
      <if test="record.payusemoney2 != null" >
        payusemoney2 = #{record.payusemoney2,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update py_balance
    set id = #{record.id,jdbcType=INTEGER},
      userno = #{record.userno,jdbcType=VARCHAR},
      balancedate = #{record.balancedate,jdbcType=DATE},
      balancemoney = #{record.balancemoney,jdbcType=DECIMAL},
      billno = #{record.billno,jdbcType=VARCHAR},
      billrealmoney1 = #{record.billrealmoney1,jdbcType=DECIMAL},
      billrealmoney2 = #{record.billrealmoney2,jdbcType=DECIMAL},
      payno = #{record.payno,jdbcType=VARCHAR},
      payusemoney1 = #{record.payusemoney1,jdbcType=DECIMAL},
      payusemoney2 = #{record.payusemoney2,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sy.entity.PyBalance" >
    update py_balance
    <set >
      <if test="userno != null" >
        userno = #{userno,jdbcType=VARCHAR},
      </if>
      <if test="balancedate != null" >
        balancedate = #{balancedate,jdbcType=DATE},
      </if>
      <if test="balancemoney != null" >
        balancemoney = #{balancemoney,jdbcType=DECIMAL},
      </if>
      <if test="billno != null" >
        billno = #{billno,jdbcType=VARCHAR},
      </if>
      <if test="billrealmoney1 != null" >
        billrealmoney1 = #{billrealmoney1,jdbcType=DECIMAL},
      </if>
      <if test="billrealmoney2 != null" >
        billrealmoney2 = #{billrealmoney2,jdbcType=DECIMAL},
      </if>
      <if test="payno != null" >
        payno = #{payno,jdbcType=VARCHAR},
      </if>
      <if test="payusemoney1 != null" >
        payusemoney1 = #{payusemoney1,jdbcType=DECIMAL},
      </if>
      <if test="payusemoney2 != null" >
        payusemoney2 = #{payusemoney2,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sy.entity.PyBalance" >
    update py_balance
    set userno = #{userno,jdbcType=VARCHAR},
      balancedate = #{balancedate,jdbcType=DATE},
      balancemoney = #{balancemoney,jdbcType=DECIMAL},
      billno = #{billno,jdbcType=VARCHAR},
      billrealmoney1 = #{billrealmoney1,jdbcType=DECIMAL},
      billrealmoney2 = #{billrealmoney2,jdbcType=DECIMAL},
      payno = #{payno,jdbcType=VARCHAR},
      payusemoney1 = #{payusemoney1,jdbcType=DECIMAL},
      payusemoney2 = #{payusemoney2,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>